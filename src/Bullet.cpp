/************************************************************************/
/*							[2014.7.24 배성환]                       */
//							   Bullet.cpp
//					
/************************************************************************/

#include "DXUT.h"
#include "Bullet.h"

///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////

//---------------------------------------------------------------------------------------------
// Bullet_DATA 구조체 생성자 [2014.7.24 배성환]
//---------------------------------------------------------------------------------------------
Bullet_DATA::Bullet_DATA()
{
	Size = sizeof(Bullet_DATA);	 
	Dmg = 0;
	Angle = 0;
	Scale = 0;
	IsPiercing = false;
	lifetime = 0.0f; // [2014.7.24 배성환]
	
	Velo  = 0.0f	; // 이동 속도
	
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//
// 여기서부터 cSmoke 클래스 맴버 함수정의
//
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

//---------------------------------------------------------------------------------------------
//생성자 소멸자 [2014.7.24 배성환]
//---------------------------------------------------------------------------------------------
cBullet::cBullet()
	: m_IsFire(false) , m_IsBoom(false), m_LookVec(D3DXVECTOR3(0.0f , 0.0f, 0.0f)),m_Pos(D3DXVECTOR3(0.0f , 0.0f, 0.0f))// 방향벡터
{
	//...
	

}

cBullet::cBullet(Bullet_DATA* pBData,  LPDIRECT3DDEVICE9 _pDevice)
{	
	Init(pBData, _pDevice);
}

cBullet::~cBullet()
{ 

	Release();
}


//-----------------------------------------------------------------------------
// 데이터 제거...
//-----------------------------------------------------------------------------

void cBullet::Release()
{
	//데이터 제거...
}


//-----------------------------------------------------------------------------
// 초기화 함수
//-----------------------------------------------------------------------------
int cBullet::Init(Bullet_DATA* pBD ,LPDIRECT3DDEVICE9 _pDevice)
{
	
	if(pBD)
	{
		//추가 데이터 셋팅..
		memcpy(&m_BData, pBD, sizeof(Bullet_DATA));
	}

	if(_pDevice == nullptr)
	{  LOG_WRITE("cBullet::Init() 에서 _pDevice가 nullptr입니다.") ;  assert(false);}
	else
	{
		m_pDevice = _pDevice;
	}

	m_IsFire = false;
	m_IsBoom = false;
	m_BDbk = m_BData;
	m_CurLife = 0;
	return TRUE;
}


//-----------------------------------------------------------------------------
// 매프레임마다 업데이트 시켜준다.
//-----------------------------------------------------------------------------
int 	cBullet::update(float timeDelta)
{
	if(m_IsFire == false)	//발사 된 놈만 움직인다... 
		return FALSE;

	m_Pos = m_LookVec * m_BData.Velo * timeDelta;

	if(m_BData.lifetime < m_CurLife)
	{
		m_IsFire = false; // 일정시간이 지나면 총알을 사라지게 한다.
	}
	m_CurLife += timeDelta;

	return TRUE;
}


//-----------------------------------------------------------------------------
// 정보 초기화 시키기 [2014.7.24 배성환]
//-----------------------------------------------------------------------------
void cBullet::Reset()
{
	//나머지 기타 정보 초기화..
	//...
	m_IsFire = false;
	m_BData = m_BDbk;
	m_IsBoom = false;
	m_CurLife = 0.0f;
	D3DXMatrixIdentity(&m_WorldTM );
}

//-----------------------------------------------------------------------------
// Look, right, up 벡터로 worldTM을 계산한다.  [2014.7.26 배성환]
// 업데이트 함수 내에서 호출되어야 함			
//-----------------------------------------------------------------------------
void	cBullet::Cal_WorldTM()
{
	D3DXVec3Normalize(&m_LookVec, &m_LookVec);

	D3DXVec3Cross(&m_UpVec, &m_LookVec, &m_RightVec);
	D3DXVec3Normalize(&m_UpVec, &m_UpVec);

	D3DXVec3Cross(&m_RightVec, &m_UpVec, &m_LookVec);
	D3DXVec3Normalize(&m_RightVec, &m_RightVec);

// 	float x = -D3DXVec3Dot(&m_RightVec, &m_Pos);
// 	float y = -D3DXVec3Dot(&m_UpVec, &m_Pos);
// 	float z = -D3DXVec3Dot(&m_LookVec, &m_Pos);
	m_WorldTM(0,0) = m_RightVec.x; m_WorldTM(0, 1) = m_RightVec.y; m_WorldTM(0, 2) = m_RightVec.z; m_WorldTM(0, 3) = 0.0f;
	m_WorldTM(1,0) = m_UpVec.x;    m_WorldTM(1, 1) = m_UpVec.y; m_WorldTM(1, 2) = m_UpVec.z; m_WorldTM(1, 3) = 0.0f;
	m_WorldTM(2,0) = m_LookVec.x; m_WorldTM(2, 1) = m_LookVec.y; m_WorldTM(2, 2) = m_LookVec.z; m_WorldTM(2, 3) = 0.0f;
	m_WorldTM._41 = m_Pos.x;     m_WorldTM._42 = m_Pos.y;		m_WorldTM._43 = m_Pos.z;     m_WorldTM._44 = 1.0f;

	

}

/****************************************************** End *****************************************************/